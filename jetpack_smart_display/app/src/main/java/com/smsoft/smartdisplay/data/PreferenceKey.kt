package com.smsoft.smartdisplay.data

import com.smsoft.smartdisplay.R

enum class PreferenceKey(val key: String, val title: Int) {
    PRIMARY_COLOR("primaryColor", R.string.primary_color),
    SECONDARY_COLOR("secondaryColor", R.string.secondary_color),
    CLOCK_AUTO_RETURN("clockAutoReturn", R.string.clock_auto_return),
    CLOCK_AUTO_RETURN_TIMEOUT("clockAutoReturnTimeout", R.string.clock_auto_return_timeout),
    CLOCK_TYPE("clockType", R.string.clock_type),
    DIGIT_STYLE_ND("digitStyle", R.string.digit_style),
    DIGIT_POSITION_ND("digitPosition", R.string.digit_position),
    DIGIT_EMP_QUARTERS_ND("digitEmpQuarters", R.string.digit_emp_quarters),
    DIGIT_FONT_ND("digitFont", R.string.digit_font),
    DIGIT_FONT_SIZE_ND("digitFontSize", R.string.digit_font_size),
    HAND_STYLE_ND("handStyle", R.string.hand_style),
    HAND_LENGTH_MINUTES_ND("handLengthMinutes", R.string.hand_length_minutes),
    HAND_LENGTH_HOURS_ND("handLengthHours", R.string.hand_length_hours),
    HAND_WIDTH_MINUTES_ND("handWidthMinutes", R.string.hand_width_minutes),
    HAND_WIDTH_HOURS_ND("handWidthHours", R.string.hand_width_hours),
    HAND_SHOW_SECOND_HAND_ND("handShowSecondHand", R.string.hand_show_second_hand),
    TICK_STYLE_MINUTES_ND("tickStyleMinutes", R.string.tick_style_minutes),
    TICK_START_MINUTES_ND("tickStartMinutes", R.string.tick_start_minutes),
    TICK_LEN_MINUTES_ND("tickLengthMinutes", R.string.tick_length_minutes),
    TICK_STYLE_HOURS_ND("tickStyleHours", R.string.tick_style_hours),
    TICK_START_HOURS_ND("tickStartHours", R.string.tick_start_hours),
    TICK_LEN_HOURS_ND("tickLengthHours", R.string.tick_length_hours),
    INNER_CIRCLE_RADIUS_ND("innerCircleRadius", R.string.inner_circle_radius),
    DIGIT_FONT_AR("digitFontRect", R.string.digit_font),
    DIGIT_FONT_SIZE_AR("digitFontSizeRect", R.string.digit_font_size),
    HAND_LENGTH_MINUTES_AR("handLengthMinutesRect", R.string.hand_length_minutes),
    HAND_LENGTH_HOURS_AR("handLengthHoursRect", R.string.hand_length_hours),
    HAND_WIDTH_MINUTES_AR("handWidthMinutesRect", R.string.hand_width_minutes),
    HAND_WIDTH_HOURS_AR("handWidthHoursRect", R.string.hand_width_hours),
    BORDER_RADIUS_JA("borderRadiusJet", R.string.border_radius),
    BORDER_THICKNESS_JA("borderThicknessJet", R.string.border_thickness),
    HAND_LENGTH_SECONDS_JA("handLengthSecondsJet", R.string.hand_length_seconds),
    HAND_LENGTH_MINUTES_JA("handLengthMinutesJet", R.string.hand_length_minutes),
    HAND_LENGTH_HOURS_JA("handLengthHoursJet", R.string.hand_length_hours),
    HAND_WIDTH_SECONDS_JA("handWidthSecondsJet", R.string.hand_width_seconds),
    HAND_WIDTH_MINUTES_JA("handWidthMinutesJet", R.string.hand_width_minutes),
    HAND_WIDTH_HOURS_JA("handWidthHoursJet", R.string.hand_width_hours),
    HAND_SHOW_SECOND_HAND_JA("handShowSecondHandJet", R.string.hand_show_second_hand),
    DIGIT_FONT_CV("digitFontClockView", R.string.digit_font),
    DIGIT_STYLE_CV("digitStyleClockView", R.string.digit_style),
    DIGIT_SHOW_HOURS_CV("digitShowHoursClockView", R.string.digit_show_hours),
    CV("digitShowMinutesClockView", R.string.digit_show_minutes),
    DIGIT_SHOW_DEGREES_CV("digitShowDegreesClockView", R.string.digit_show_degrees),
    DIGIT_DISPOSITION_CV("digitDispositionClockView", R.string.digit_disposition),
    DIGIT_STEP_CV("digitStepClockView", R.string.digit_step),
    DEGREE_TYPE_CV("degreeTypeClockView", R.string.degree_type),
    DEGREE_STEP_CV("degreeStepClockView", R.string.degree_step),
    SHOW_CENTER_CV("showCenterClockView", R.string.show_center),
    SHOW_SECOND_HAND_CV("showSecondHandClockView", R.string.hand_show_second_hand),
    DIGIT_FONT_CV2("digitFontClockView2", R.string.digit_font),
    DIGIT_STYLE_CV2("digitStyleClockView2", R.string.digit_style),
    OUTER_RIM_WIDTH_CV2("outerRimWidthClockView2", R.string.outer_rim_width),
    INNER_RIM_WIDTH_CV2("innerRimWidthClockView2", R.string.inner_rim_width),
    THICK_MARKER_WIDTH_CV2("thickMarkerWidthClockView2", R.string.thick_marker_width),
    THIN_MARKER_WIDTH_CV2("thinMarkerWidthClockView2", R.string.thin_marker_width),
    DIGIT_TEXT_SIZE_CV2("digitTextSizeClockView2", R.string.digit_text_size),
    HOUR_HAND_WIDTH_CV2("hourHandWidthClockView2", R.string.hour_hand_width),
    MINUTE_HAND_WIDTH_CV2("minuteHandWidthClockView2", R.string.minute_hand_width),
    SECOND_HAND_WIDTH_CV2("secondHandWidthClockView2", R.string.second_hand_width),
    CENTER_CIRCLE_RADIUS_CV2("centerCircleRadiusClockView2", R.string.center_circle_radius),
    REVERSE_ROTATION_FC("reverseRotationFlipClock", R.string.reverse_rotation_flip_clock),
    PADDING_FC("paddingFlipClock", R.string.padding_flip_clock),
    FONT_SIZE_FC("fontSizeFlipClock", R.string.font_size_flip_clock),
    DOT_STYLE_MC("dotStyleMatrixClock", R.string.dot_style_matrix_clock),
    SHOW_SECONDS_MC("showSecondsMatrixClock", R.string.show_seconds_matrix_clock),
    SPACE_HEIGHT_DC("spaceHeightMatrixClock", R.string.space_height_matrix_clock),
    DOT_RADIUS_ROUND_MC("dotRadiusRoundMatrixClock", R.string.dot_radius_round_matrix_clock),
    DOT_SPACING_ROUND_MC("dotSpacingRoundMatrixClock", R.string.dot_spacing_round_matrix_clock),
    DOT_RADIUS_ROUND_SEC_MC("dotRadiusRoundSecMatrixClock", R.string.dot_radius_round_sec_matrix_clock),
    DOT_SPACING_ROUND_SEC_MC("dotSpacingRoundSecMatrixClock", R.string.dot_spacing_round_sec_matrix_clock),
    DOT_RADIUS_SQUARE_MC("dotRadiusSquareMatrixClock", R.string.dot_radius_square_matrix_clock),
    DOT_SPACING_SQUARE_MC("dotSpacingSquareMatrixClock", R.string.dot_spacing_square_matrix_clock),
    DOT_RADIUS_SQUARE_SEC_MC("dotRadiusSquareSecMatrixClock", R.string.dot_radius_square_sec_matrix_clock),
    DOT_SPACING_SQUARE_SEC_MC("dotSpacingSquareSecMatrixClock", R.string.dot_spacing_square_sec_matrix_clock),
    SHOW_SECONDS_DC("showSecondsDigitalClock", R.string.show_seconds_digital_clock),
    SHOW_DATE_DC("showDateDigitalClock", R.string.show_date_digital_clock),
    TIME_FONT_DC("timeFontDigitalClock", R.string.time_font_digital_clock),
    TIME_FONT_SIZE_DC("timeFontSizeDigitalClock", R.string.time_font_size_digital_clock),
    DATE_FONT_DC("dateFontDigitalClock", R.string.date_font_digital_clock),
    DATE_FONT_SIZE_DC("dateFontSizeDigitalClock", R.string.date_font_size_digital_clock),
    FONT_SIZE_DC2("fontSizeDigitalClock2", R.string.font_size_digital_clock2),
    SHOW_SECONDS_DC2("showSecondsDigitalClock2", R.string.show_seconds_digital_clock),
    SHADOW_RADIUS_DC2("shadowRadiusDigitalClock2", R.string.shadow_radius_digital_clock2),
    ANIMATION_DURATION_DC2("animationDuationDigitalClock2", R.string.animation_duration_digital_clock2),
    MQTT_BROKER_HOST("mqttServerHost", R.string.mqtt_broker_host),
    MQTT_BROKER_PORT("mqttServerPort", R.string.mqtt_broker_port),
    MQTT_BROKER_USERNAME("mqttServerUsername", R.string.mqtt_broker_username),
    MQTT_BROKER_PASSWORD("mqttServerPassword", R.string.mqtt_broker_password),
    WEATHER_CITY_LAT("weatherCityLat", R.string.weather_city_lat),
    WEATHER_CITY_LON("weatherCityLon", R.string.weather_city_lon),
    RADIO_TYPE("radioType", R.string.radio_type),
    RADIO_PRESET("radioPreset", R.string.radio_preset),
    MPD_SERVER_HOST("mpdServerHost", R.string.mpd_server_host),
    MPD_SERVER_PORT("mpdServerPort", R.string.mpd_server_port),
    MPD_SERVER_PASSWORD("mpdServerPassword", R.string.mpd_server_password),
    DOORBELL_ALARM_TOPIC("doorbellAlarmTopic", R.string.doorbell_alarm_topic),
    DOORBELL_STREAM_URL("doorbellStreamUrl", R.string.doorbell_stream_url),
    DOORBELL_BACK_TIMER_DELAY("doorbellBackTimerDelay", R.string.doorbell_back_timer_delay),
    PUSH_BUTTON_TOPIC("pushButtonTopic", R.string.push_button_topic),
    PUSH_BUTTON_PAYLOAD_ON("pushButtonPayloadOn", R.string.push_button_payload_on),
    PUSH_BUTTON_PAYLOAD_OFF("pushButtonPayloadOff", R.string.push_button_payload_off),
    PROXIMITY_SENSOR_TOPIC("proximitySensorTopic", R.string.proximity_sensor_topic),
    PROXIMITY_SENSOR_PAYLOAD_ON("proximitySensorPayloadOn", R.string.push_button_payload_on),
    PROXIMITY_SENSOR_PAYLOAD_OFF("proximitySensorPayloadOff", R.string.push_button_payload_off),
    ASR_ENABLED("asrEnabled", R.string.asr_enabled),
    ASR_WAKE_WORD("asrWakeWord", R.string.asr_wake_word),
    ASR_SOUND_ENABLED("asrSoundEnabled", R.string.asr_sound_enabled),
    ASR_SOUND_VOLUME("asrSoundVolume", R.string.asr_sound_volume),
    LIGHT_SENSOR_ENABLED("lightSensorEnabled", R.string.light_sensor_enabled),
    LIGHT_SENSOR_TOPIC("lightSensorTopic", R.string.light_sensor_topic),
    LIGHT_SENSOR_INTERVAL("lightSensorInterval", R.string.light_sensor_interval);
}